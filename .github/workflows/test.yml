name: Test

on:
    push:
        branches:
            - master
            - develop
    pull_request:

jobs:
    lint:
        runs-on: ubuntu-latest
        steps:
            -   uses: actions/checkout@v2
            -   uses: actions/setup-python@v2

            -   name: Install dependencies
                run: |
                    python -m pip install --upgrade pip pre-commit
            -   name:
                run: pre-commit run --all-files

    test:
        runs-on: ubuntu-latest
        services:
            postgres:
                image: postgres:12
                env:
                    POSTGRES_USER: postgres
                    POSTGRES_PASSWORD: postgres
                    POSTGRES_DB: smart_register
                ports:
                    - 5432:5432
                options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        strategy:
          fail-fast: false
          matrix:
            python-version: [ "3.9.2"]
            django-version: [ "3.2.2" ]
        env:
            DATABASE_URL: postgres://postgres:postgres@127.0.0.1:5432/smart_register
            PY_VER: ${{ matrix.python-version}}
            DJ_VER: ${{ matrix.django-version}}
            POETRY_VERSION: POETRY_VERSION=1.1.13
        steps:
            -   uses: actions/checkout@v2

            -   name: Set up Python ${{ matrix.python-version }}
                uses: actions/setup-python@v2
                with:
                    python-version: 3.9.2
            - name: Install Poetry
              run: curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python
            -   name: Install dependencies
                run: poetry config virtualenvs.create false && poetry install --no-interaction --no-ansi
            -   name: Test with
                run: py.test tests/ -v

            -   uses: codecov/codecov-action@v1
                with:
                    verbose: true # optional (default = false)
